#                  from  n    params  module                                  arguments
#  0                -1  1      3520  models.common.Focus                     [3, 32, 3]
#  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
#  2                -1  1     18816  models.common.C3                        [64, 64, 1]
#  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
#  4                -1  1    156928  models.common.C3                        [128, 128, 3]
#  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
#  6                -1  1    625152  models.common.C3                        [256, 256, 3]
#  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
#  8                -1  1    656896  models.common.SPP                       [512, 512, [5, 9, 13]]
#  9                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
# 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
# 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 12           [-1, 6]  1         0  models.common.Concat                    [1]
# 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
# 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
# 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
# 16           [-1, 4]  1         0  models.common.Concat                    [1]
# 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
# 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
# 22          [-1, 10]  1         0  models.common.Concat                    [1]
# 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
# parameters
nc: 2 # number of classes
# depth_multiple表示BottleneckCSP模块的缩放因子，将所有BottleneckCSP模块的Bottleneck乘上该参数得到最终个数。
# width_multiple表示卷积通道的缩放因子，就是将配置里面的backbone和head部分有关Conv通道的设置，全部乘以该系数。
depth_multiple: 0.33 # model depth multiple 控制模型的深度（BottleneckCSP个数）
width_multiple: 0.50 # layer channel multiple  控制Conv通道channel个数（卷积核数量）

# anchors
anchors:
    - [10, 13, 16, 30, 33, 23] # P3/8
    - [30, 61, 62, 45, 59, 119] # P4/16
    - [116, 90, 156, 198, 373, 326] # P5/32

# YOLOv5 backbone 在不同图像细粒度上聚合并形成图像特征的卷积神经网络 采样Conv、Focus、SPP（空间金字塔池化）
backbone:
    # from   第一列 输入来自哪一层  -1代表上一层， 4代表第4层
    # number 第二列 卷积核的数量    最终数量需要乘上width
    # module 第三列 模块名称 包括：Conv Focus BottleneckCSP  SPP
    # args   第四列 模块的参数
    # [from, number, module, args]                [模块输入channel, 模块输出channel, 模块其他参数]
    [
        [-1, 1, Focus, [64, 3]], # 0-P1/2 解析得到[3, 32, 3] ，输入为3（RGB），输出为64*0.50=32，卷积核k=3(表示3x3的卷积核)
        [-1, 1, Conv, [128, 3, 2]], # 1-P2/4  [128, 3, 2] 解析得到[32, 64, 3, 2] ，32是输入，64是输出（128*0.5=64），3表示3×3的卷积核，2表示步长为2
        [-1, 3, C3, [128]], # 2        [64, 64, 1] 输入64 输出128*0.50 number=0.33*3=1
        [-1, 1, Conv, [256, 3, 2]], # 3-P3/8   [64, 128, 3, 2]
        [-1, 9, C3, [256]], # 4        [128, 128, 3]
        [-1, 1, Conv, [512, 3, 2]], # 5-P4/16  [128, 256, 3, 2]
        [-1, 9, C3, [512]], # 6        [256, 256, 3]
        [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32  [256, 512, 3, 2]
        [-1, 1, SPP, [1024, [5, 9, 13]]], # 8        [512, 512, [5, 9, 13]]
        [-1, 3, C3, [1024, False]], # 9        [512, 512, 1, False]
    ]

# YOLOv5 head
head: [
        [-1, 1, Conv, [512, 1, 1]],
        [-1, 1, nn.Upsample, [None, 2, "nearest"]], #上采样   采用nearest两倍上采样插值nn.Upsample(mode="nearest")
        [[-1, 6], 1, Concat, [1]], # cat backbone P4 代表cat上一层和第6层
        [-1, 3, C3, [512, False]], # 13 第13层

        [-1, 1, Conv, [256, 1, 1]], #上采样
        [-1, 1, nn.Upsample, [None, 2, "nearest"]],
        [[-1, 4], 1, Concat, [1]], # cat backbone P3 #代表cat上一层和第4层
        [-1, 3, C3, [256, False]], # 17 (P3/8-small)  第17层

        [-1, 1, Conv, [256, 3, 2]],
        [[-1, 14], 1, Concat, [1]], # cat head P4 #代表cat上一层和第14层
        [-1, 3, C3, [512, False]], # 20 (P4/16-medium) 第20层

        [-1, 1, Conv, [512, 3, 2]],
        [[-1, 10], 1, Concat, [1]], # cat head P5
        [-1, 3, C3, [1024, False]], # 23 (P5/32-large) 第23层

        [[17, 20, 23], 1, Detect, [nc, anchors]], # Detect(P3, P4, P5) 代表cat上一层和第10层
    ]
